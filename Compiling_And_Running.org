* Compiling
Please use the provided makefile. The command "make" will compile an executable of the project.
"make clean" provides the usual behaviour of erasing all compiled files. The makefile was structed
in such a way that it would be able to support a project with increased dependency and complexity in
the future.

* Running 
The program accepts one command line arguments as the size of the square maze the user wishes 
to havie. The size must be an odd, non negative number. For example "./maze 11" will print a maze to
the console.

* Testing
See Testing_Considerations.org for more information on test cases. Valid test cases may be ran with
"make all_test" invalid tests must be run individually. For sake of time only simple makefile test
cases were written as I am not familiar with a good C testing framework, and the reccommended time
budget for the assignment did not allow me sufficient time to learn one. In the future I would 
prioritize unit and functional testing given adequate time before the deadline. The makefile is used
to run test cases due to it's ease of use, and that it was to be found on most computers that this 
program could be ran on.

* Compiling
The project is compiled using the provided makefile to build object files that are then compiled
into the final executable. Makefile was used to reduce repeat work when compiling and testing code,
as well as to provide future extensibility and flexibility of the project.
